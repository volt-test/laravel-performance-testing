name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

env:
  COMPOSER_NO_INTERACTION: 1

jobs:
  php-cs-fixer:
    runs-on: ubuntu-latest
    name: PHP CS Fixer

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: dependencies-php-cs-fixer-composer-${{ hashFiles('composer.json') }}
          restore-keys: dependencies-php-cs-fixer-composer-

      - name: Install composer dependencies
        run: composer update --prefer-stable --prefer-dist --no-interaction

      - name: Check code style
        run: composer run-script cs-check

  phpstan:
    runs-on: ubuntu-latest
    name: PHPStan Static Analysis

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: dependencies-phpstan-composer-${{ hashFiles('composer.json') }}
          restore-keys: dependencies-phpstan-composer-

      - name: Install composer dependencies
        run: composer update --prefer-stable --prefer-dist --no-interaction

      - name: Run static analysis
        run: composer run-script analyse

  code-quality-summary:
    runs-on: ubuntu-latest
    name: Code Quality Summary
    needs: [php-cs-fixer, phpstan]
    if: always()

    steps:
      - name: Quality Check Results
        run: |
          echo "Code Quality Results:"
          echo "- PHP CS Fixer: ${{ needs.php-cs-fixer.result }}"
          echo "- PHPStan: ${{ needs.phpstan.result }}"
          
          if [ "${{ needs.php-cs-fixer.result }}" == "success" ] && [ "${{ needs.phpstan.result }}" == "success" ]; then
            echo "✅ All code quality checks passed!"
          else
            echo "❌ Some code quality checks failed!"
            exit 1
          fi